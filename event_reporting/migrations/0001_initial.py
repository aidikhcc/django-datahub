# Generated by Django 4.2.7 on 2024-12-15 09:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "medication_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "iv_blood_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "laboratory_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "surgery_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "documentation_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "equipment_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "patient_safety_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "admission_related",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("event_number", models.AutoField(primary_key=True, serialize=False)),
                ("event_date", models.DateField()),
                ("report_date", models.DateField(auto_now_add=True)),
                ("MRN", models.CharField(max_length=50)),
                (
                    "patient_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("nationality", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "diagnosis",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Lung", "Lung"),
                            ("Neuroendocrine tumor", "Neuroendocrine tumor"),
                            ("GIST", "GIST"),
                            (
                                "Chronic granulomatous disease",
                                "Chronic granulomatous disease",
                            ),
                            ("Submandibular tumor", "Submandibular tumor"),
                            ("Unknown primary", "Unknown primary"),
                            ("Skin", "Skin"),
                            ("Melanoma", "Melanoma"),
                            ("Tracheal", "Tracheal"),
                            (
                                "Autoimmune lymphoproliferative syndrome",
                                "Autoimmune lymphoproliferative syndrome",
                            ),
                            ("Glioblastoma", "Glioblastoma"),
                            ("Myelofibrosis", "Myelofibrosis"),
                            ("Urothelial carcinoma", "Urothelial carcinoma"),
                            ("Penile", "Penile"),
                            ("Choriocarcinoma", "Choriocarcinoma"),
                            ("Pituitary", "Pituitary"),
                            ("Myelodysplastic syndrome", "Myelodysplastic syndrome"),
                            ("Aplastic", "Aplastic"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "floor_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Sheikh Khalifa 7th", "Sheikh Khalifa 7th"),
                            ("Sheikh Khalifa 6th", "Sheikh Khalifa 6th"),
                            ("Sheikh Khalifa 2nd", "Sheikh Khalifa 2nd"),
                            ("Sheikh Khalifa 5th", "Sheikh Khalifa 5th"),
                            ("Nizar AL-Naqeeb 1st", "Nizar AL-Naqeeb 1st"),
                            ("Sheikh Khalifa 8th", "Sheikh Khalifa 8th"),
                            ("Sheikh Khalifa 4th", "Sheikh Khalifa 4th"),
                            ("MAIN OFFICE", "MAIN OFFICE"),
                            ("Early Detection", "Early Detection"),
                            ("Nizar AL-Naqeeb 2nd", "Nizar AL-Naqeeb 2nd"),
                            ("EMPLOYEES CLINIC", "EMPLOYEES CLINIC"),
                            ("Nizar AL-Naqeeb Basmant", "Nizar AL-Naqeeb Basmant"),
                            ("Nizar Al Naqeeb", "Nizar Al Naqeeb"),
                            ("King Salman GF", "King Salman GF"),
                            ("Other", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("room", models.CharField(blank=True, max_length=50, null=True)),
                ("department_initiated", models.CharField(max_length=100)),
                ("supervisor_name", models.CharField(max_length=255)),
                (
                    "supervisor_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("event_description", models.TextField()),
                ("immediate_action", models.TextField()),
                ("good_catch_event", models.BooleanField(default=False)),
                ("pending", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "[datahub].[Event_Reports]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EventAssignment",
            fields=[
                ("assignment_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_email", models.EmailField(max_length=254)),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "[datahub].[Event_Assignments]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EventNote",
            fields=[
                ("note_id", models.AutoField(primary_key=True, serialize=False)),
                ("note_text", models.TextField()),
                ("user_email", models.EmailField(max_length=254)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "[datahub].[Event_Notes]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModificationLog",
            fields=[
                ("log_id", models.AutoField(primary_key=True, serialize=False)),
                ("modified_by", models.EmailField(max_length=254)),
                ("modification_type", models.CharField(max_length=50)),
                ("field_name", models.CharField(max_length=100)),
                ("old_value", models.TextField(null=True)),
                ("new_value", models.TextField(null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "[datahub].[Event_Modification_Logs]",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EventComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="event_reporting.event",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
